name: .NET Build & Test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
      - '**/*.txt'
      - '.vscode/**'
      - '.devcontainer/**'
      - '.github/ISSUE_TEMPLATE/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
      - '**/*.txt'
      - '.vscode/**'
      - '.devcontainer/**'
      - '.github/ISSUE_TEMPLATE/**'
  schedule:
    # Run integration tests nightly at 2 AM UTC
    - cron: '0 2 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            **/packages.lock.json
            **/*.csproj
            **/*.sln*
            global.json
            NuGet.config

      - name: Restore
        run: |
          cd src && dotnet restore HVOv9.slnx --nologo -v minimal || dotnet restore --nologo -v minimal

      - name: Build
        run: |
          cd src && dotnet build HVOv9.slnx -c Release --no-restore --nologo -v minimal -maxcpucount /p:ContinuousIntegrationBuild=true || \
          dotnet build -c Release --no-restore --nologo -v minimal -maxcpucount /p:ContinuousIntegrationBuild=true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            src/**/bin/Release/**
            !src/**/bin/Release/**/ref/**
            src/**/obj/Release/net9.0/compressed/**
            src/**/obj/Release/net9.0/scopedcss/**
          retention-days: 1

  test-unit:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    strategy:
      matrix:
        test-project:
          - HVO.Iot.Devices.Tests
          - HVO.WebSite.Playground.Tests
          - HVO.RoofControllerV4.RPi.Tests
          - HVO.WebSite.v9.Tests

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            **/packages.lock.json
            **/*.csproj
            **/*.sln*
            global.json
            NuGet.config

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: src

      - name: Run unit tests
        run: |
          cd src
          mkdir -p TestResults/${{ matrix.test-project }}
          dotnet test ${{ matrix.test-project }} --no-build -c Release --nologo -v minimal \
            --filter "TestCategory!=Integration" \
            -l "trx;LogFileName=${{ matrix.test-project }}.trx" \
            --results-directory TestResults/${{ matrix.test-project }} \
            --logger "console;verbosity=normal"

      - name: Upload Unit Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-unit-${{ matrix.test-project }}-${{ github.run_id }}
          path: src/TestResults/${{ matrix.test-project }}
          if-no-files-found: warn
          retention-days: 7

  test-integration:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    # Gate integration tests: run on main branch, scheduled runs, or when PR has integration-tests label
    if: |
      github.ref == 'refs/heads/main' || 
      github.event_name == 'schedule' || 
      contains(github.event.pull_request.labels.*.name, 'integration-tests')
    
    strategy:
      matrix:
        test-project:
          - HVO.Iot.Devices.Tests
          - HVO.WebSite.Playground.Tests
          - HVO.RoofControllerV4.RPi.Tests
          - HVO.WebSite.v9.Tests

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            **/packages.lock.json
            **/*.csproj
            **/*.sln*
            global.json
            NuGet.config

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: src

      - name: Run integration tests
        run: |
          cd src
          mkdir -p TestResults/${{ matrix.test-project }}
          dotnet test ${{ matrix.test-project }} --no-build -c Release --nologo -v minimal \
            --filter "TestCategory=Integration" \
            -l "trx;LogFileName=${{ matrix.test-project }}.trx" \
            --results-directory TestResults/${{ matrix.test-project }} \
            --logger "console;verbosity=normal"

      - name: Upload Integration Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-integration-${{ matrix.test-project }}-${{ github.run_id }}
          path: src/TestResults/${{ matrix.test-project }}
          if-no-files-found: warn
          retention-days: 7
