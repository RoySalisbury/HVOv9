@page "/"
@page "/roof-control-v2"
@page "/roof-control"
@inherits RoofControlBase
@using HVO.WebSite.RoofControllerV4.Logic
@using HVO.WebSite.RoofControllerV4.Models
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Roof Control V2 - HVOv9</PageTitle>

<div class="rc2-shell">
    <div class="rc2-top">
        <div class="rc2-intro">
            <h1 class="rc2-intro-title">Observatory Roof Controller</h1>
            <p class="rc2-intro-text">
                The observatory roof can be opened or closed from the controls below. Safety systems automatically
                monitor motion and will stop the motors on timeout or fault. Status indicators reflect the live
                state of the controller. Only one motion may be active at a time.
            </p>

            <div class="rc2-status-pill">
                <span class="badge rc2-badge @(IsInitialized ? "bg-success" : "bg-secondary") me-2">@(IsInitialized ? "Initialized" : "Initializing…")</span>
                <span class="badge rc2-badge @GetHealthCheckBadgeClass() me-2"><i class="bi bi-heart me-1"></i>Health</span>
                @if (!string.IsNullOrEmpty(GetLastStopTypeLabel()))
                {
                    <span class="badge rc2-badge @(WasEmergencyStop ? "bg-danger" : "bg-secondary")"><i class="bi bi-stop-circle me-1"></i>@GetLastStopTypeLabel() Stop</span>
                }
            </div>

            @if (!IsServiceAvailable)
            {
                <div class="rc2-banner-row">
                    @if (IsServiceDisposed)
                    {
                        <div class="rc2-banner rc2-banner-danger" role="alert">
                            <i class="bi bi-plug-x-fill me-2"></i>
                            <div>
                                <strong>Service unavailable</strong>
                                <div class="small text-muted">The roof controller service is stopped or disposed. Controls are disabled until it is restored.</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="rc2-banner rc2-banner-warn" role="alert">
                            <i class="bi bi-hourglass-split me-2"></i>
                            <div class="flex-grow-1">
                                <strong>Initializing service…</strong>
                                <div class="small text-muted">Please wait. Controls will enable automatically when ready.</div>
                            </div>
                            <span class="ms-3 spinner-border spinner-border-sm text-warning" role="status" aria-hidden="true"></span>
                        </div>
                    }
                </div>
            }

            @if (CurrentStatus == RoofControllerStatus.Error)
            {
                <div class="alert rc2-alert rc2-alert-danger" role="alert">
                    <div class="d-flex align-items-center w-100">
                        <i class="bi bi-exclamation-octagon-fill me-2"></i>
                        <div class="flex-grow-1">
                            <strong>Fault detected.</strong> Review system and clear fault when safe.
                        </div>
                        <button class="btn btn-outline-light" disabled="@IsClearFaultDisabled" @onclick="ClearFaultAsync">
                            <i class="bi bi-bandaid me-1"></i>Clear Fault
                        </button>
                    </div>
                </div>
            }
        </div>

        <div class="rc2-camera">
            <div class="rc2-card rc2-card--glass">
                <div class="rc2-card-head d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="bi bi-camera-video me-2"></i>Roof Camera</h5>
                    <span class="badge bg-dark-subtle text-light">Preview</span>
                </div>
                <div class="rc2-card-body rc2-camera-body">
                    <div class="rc2-camera-placeholder">
                        <CameraStream />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="rc2-grid">
        <!-- Controls -->
        <div class="rc2-card rc2-panel">
            <div class="rc2-card-head">
                <h5 class="mb-0"><i class="bi bi-controller me-2"></i>Controls</h5>
            </div>
            <div class="rc2-card-body">
                <div class="rc2-action-grid">
                    <button class="@GetOpenButtonClass() rc2-action" type="button" disabled="@IsOpenDisabled" @onclick="OpenRoof">
                        <i class="bi bi-arrow-up-circle me-2"></i>Open
                    </button>
                    <button class="@GetStopButtonClass() rc2-action" type="button" disabled="@IsStopDisabled" @onclick="StopRoof">
                        <i class="bi bi-stop-circle me-2"></i>Stop
                    </button>
                    <button class="@GetCloseButtonClass() rc2-action" type="button" disabled="@IsCloseDisabled" @onclick="CloseRoof">
                        <i class="bi bi-arrow-down-circle me-2"></i>Close
                    </button>
                    <button class="btn btn-outline-danger btn-lg control-btn rc2-action" type="button" disabled="@IsClearFaultDisabled" @onclick="ClearFaultAsync">
                        <i class="bi bi-bandaid me-2"></i>Clear Fault
                    </button>
                </div>
            </div>
        </div>

        <!-- System Details -->
        <div class="rc2-card rc2-panel rc2-details">
            <div class="rc2-card-head">
                <h5 class="mb-0"><i class="bi bi-activity me-2"></i>System Status</h5>
            </div>
            <div class="rc2-card-body">
                <div class="rc2-kpis">
                    <div class="rc2-kpi"><div class="rc2-kpi-label">Controller</div><div class="rc2-kpi-value">@(IsInitialized ? "Ready" : "Initializing…")</div></div>
                    <div class="rc2-kpi"><div class="rc2-kpi-label">Health</div><div class="rc2-kpi-value">@GetHealthCheckStatus()</div></div>
                    <div class="rc2-kpi"><div class="rc2-kpi-label">Movement</div><div class="rc2-kpi-value">@(IsMoving ? "In Progress" : "Idle")</div></div>
                    <div class="rc2-kpi" title="@GetLastTransitionTooltip()"><div class="rc2-kpi-label">Last Transition</div><div class="rc2-kpi-value">@GetLastTransitionFriendly()</div></div>
                </div>
            </div>
        </div>
    </div>

    <div class="rc2-note">
        <i class="bi bi-info-circle me-2"></i>
        Only one operation at a time. Use Stop for normal interruption; emergency stops are automatic on fault/watchdog.
    </div>
</div>
